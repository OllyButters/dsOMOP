% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_resource.R
\name{OMOPCDMResourceClient}
\alias{OMOPCDMResourceClient}
\title{OMOP CDM Resource Client}
\description{
The OMOPCDMResourceClient class provides methods to:
\itemize{
\item Initialize connections with OMOP CDM databases
\item Manage database connections lifecycle
\item Extract and handle schema information
\item Parse and utilize DBMS configuration
}
}
\details{
This R6 class manages connections and interactions with OMOP Common Data Model (CDM) databases.
It extends the generic ResourceClient class to provide OMOP CDM-specific functionality for database
connections, schema management, and resource handling.

The class uses a URL-based configuration system with the format:
\verb{dbms://host:port/database//dsomop::/schema:schema_name/vocabulary_schema:vocab_schema}

Where:
\itemize{
\item dbms: Database management system (e.g., postgresql, mysql)
\item schema: Main database schema name
\item vocabulary_schema: Schema containing OMOP vocabulary tables
}

This method manages the database connection lifecycle:
\enumerate{
\item Checks for existing connection
\item If none exists, extracts base URL from resource
\item Creates new connection using DBI connector
\item Stores connection for reuse
}

Parses the resource URL to find schema configuration in format:
\verb{/schema:schema_name}

Parses the resource URL to find vocabulary schema configuration in format:
\verb{/vocabulary_schema:schema_name}

Extracts DBMS identifier from start of URL (e.g., "postgresql", "mysql")

Safely closes connection if one exists and resets connection state
}
\examples{
\dontrun{
# Create a resource object
resource <- list(
  url = "postgresql://localhost:5432/omop_db//dsomop::/schema:cdm/vocabulary_schema:vocab",
  format = "omop.cdm.db"
)

# Initialize client
client <- OMOPCDMResourceClient$new(resource)

# Get database connection
conn <- client$getConnection()

# Close connection when done
client$close()
}

}
\section{Super class}{
\code{\link[resourcer:ResourceClient]{resourcer::ResourceClient}} -> \code{OMOPCDMResourceClient}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OMOPCDMResourceClient-new}{\code{OMOPCDMResourceClient$new()}}
\item \href{#method-OMOPCDMResourceClient-getConnection}{\code{OMOPCDMResourceClient$getConnection()}}
\item \href{#method-OMOPCDMResourceClient-getSchema}{\code{OMOPCDMResourceClient$getSchema()}}
\item \href{#method-OMOPCDMResourceClient-getVocabularySchema}{\code{OMOPCDMResourceClient$getVocabularySchema()}}
\item \href{#method-OMOPCDMResourceClient-getDBMS}{\code{OMOPCDMResourceClient$getDBMS()}}
\item \href{#method-OMOPCDMResourceClient-close}{\code{OMOPCDMResourceClient$close()}}
\item \href{#method-OMOPCDMResourceClient-clone}{\code{OMOPCDMResourceClient$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="asDataFrame"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-asDataFrame'><code>resourcer::ResourceClient$asDataFrame()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="asTbl"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-asTbl'><code>resourcer::ResourceClient$asTbl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="downloadFile"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-downloadFile'><code>resourcer::ResourceClient$downloadFile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="exec"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-exec'><code>resourcer::ResourceClient$exec()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="getResource"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-getResource'><code>resourcer::ResourceClient$getResource()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OMOPCDMResourceClient instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$new(resource, dbi.connector = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resource}}{A list containing resource configuration (url, format)}

\item{\code{dbi.connector}}{Optional DBI connector object. If NULL, attempts to find suitable connector}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new OMOPCDMResourceClient object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-getConnection"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-getConnection}{}}}
\subsection{Method \code{getConnection()}}{
Get or create an active database connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$getConnection()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A DBI connection object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-getSchema"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-getSchema}{}}}
\subsection{Method \code{getSchema()}}{
Extract database schema name from resource URL
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$getSchema()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string containing schema name, or NULL if not specified
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-getVocabularySchema"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-getVocabularySchema}{}}}
\subsection{Method \code{getVocabularySchema()}}{
Extract vocabulary schema name from resource URL
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$getVocabularySchema()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string containing vocabulary schema name, or NULL if not specified
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-getDBMS"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-getDBMS}{}}}
\subsection{Method \code{getDBMS()}}{
Extract database management system type from resource URL
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$getDBMS()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string containing DBMS type
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-close"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-close}{}}}
\subsection{Method \code{close()}}{
Close active database connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OMOPCDMResourceClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OMOPCDMResourceClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMOPCDMResourceClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
